//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("storemasterModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.AspNetUser), "AspNetUserClaims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.AspNetUserClaim), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.AspNetUser), "AspNetUserLogins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.AspNetUserLogin), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Carts_AspNetUsers", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.AspNetUser), "Carts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Cart), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_OrderDetails_OrderDetails", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.AspNetUser), "OrderDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Orders_AspNetUsers", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.AspNetUser), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Order), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Reviews_AspNetUsers", "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.AspNetUser), "Reviews", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Review), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Carts_Items", "Itemeoffereds", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.Itemeoffered), "Carts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Cart), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Items_Categoreis", "Categoreis", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.Categorei), "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Item), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Orders_Cities", "Cities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.City), "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Order), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Itemeoffereds_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.Item), "Itemeoffereds", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Itemeoffered), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_OrderDetails_Items", "Itemeoffereds", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.Itemeoffered), "OrderDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_Reviews_Items", "Items", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(lubnamaster.Models.Item), "Reviews", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.Review), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "FK_OrderDetails_Orders", "Orders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(lubnamaster.Models.Order), "OrderDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.OrderDetail), true)]
[assembly: EdmRelationshipAttribute("storemasterModel", "AspNetUserRoles", "AspNetRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.AspNetRole), "AspNetUsers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(lubnamaster.Models.AspNetUser))]

#endregion

namespace lubnamaster.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class storemasterEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new storemasterEntities object using the connection string found in the 'storemasterEntities' section of the application configuration file.
        /// </summary>
        public storemasterEntities() : base("name=storemasterEntities", "storemasterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new storemasterEntities object.
        /// </summary>
        public storemasterEntities(string connectionString) : base(connectionString, "storemasterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new storemasterEntities object.
        /// </summary>
        public storemasterEntities(EntityConnection connection) : base(connection, "storemasterEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetRole> AspNetRoles
        {
            get
            {
                if ((_AspNetRoles == null))
                {
                    _AspNetRoles = base.CreateObjectSet<AspNetRole>("AspNetRoles");
                }
                return _AspNetRoles;
            }
        }
        private ObjectSet<AspNetRole> _AspNetRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                if ((_AspNetUserClaims == null))
                {
                    _AspNetUserClaims = base.CreateObjectSet<AspNetUserClaim>("AspNetUserClaims");
                }
                return _AspNetUserClaims;
            }
        }
        private ObjectSet<AspNetUserClaim> _AspNetUserClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                if ((_AspNetUserLogins == null))
                {
                    _AspNetUserLogins = base.CreateObjectSet<AspNetUserLogin>("AspNetUserLogins");
                }
                return _AspNetUserLogins;
            }
        }
        private ObjectSet<AspNetUserLogin> _AspNetUserLogins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AspNetUser> AspNetUsers
        {
            get
            {
                if ((_AspNetUsers == null))
                {
                    _AspNetUsers = base.CreateObjectSet<AspNetUser>("AspNetUsers");
                }
                return _AspNetUsers;
            }
        }
        private ObjectSet<AspNetUser> _AspNetUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cart> Carts
        {
            get
            {
                if ((_Carts == null))
                {
                    _Carts = base.CreateObjectSet<Cart>("Carts");
                }
                return _Carts;
            }
        }
        private ObjectSet<Cart> _Carts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Categorei> Categoreis
        {
            get
            {
                if ((_Categoreis == null))
                {
                    _Categoreis = base.CreateObjectSet<Categorei>("Categoreis");
                }
                return _Categoreis;
            }
        }
        private ObjectSet<Categorei> _Categoreis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Itemeoffered> Itemeoffereds
        {
            get
            {
                if ((_Itemeoffereds == null))
                {
                    _Itemeoffereds = base.CreateObjectSet<Itemeoffered>("Itemeoffereds");
                }
                return _Itemeoffereds;
            }
        }
        private ObjectSet<Itemeoffered> _Itemeoffereds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderDetail> OrderDetails
        {
            get
            {
                if ((_OrderDetails == null))
                {
                    _OrderDetails = base.CreateObjectSet<OrderDetail>("OrderDetails");
                }
                return _OrderDetails;
            }
        }
        private ObjectSet<OrderDetail> _OrderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Orders
        {
            get
            {
                if ((_Orders == null))
                {
                    _Orders = base.CreateObjectSet<Order>("Orders");
                }
                return _Orders;
            }
        }
        private ObjectSet<Order> _Orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Reviews
        {
            get
            {
                if ((_Reviews == null))
                {
                    _Reviews = base.CreateObjectSet<Review>("Reviews");
                }
                return _Reviews;
            }
        }
        private ObjectSet<Review> _Reviews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__MigrationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetRoles(AspNetRole aspNetRole)
        {
            base.AddObject("AspNetRoles", aspNetRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserClaims(AspNetUserClaim aspNetUserClaim)
        {
            base.AddObject("AspNetUserClaims", aspNetUserClaim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUserLogins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUserLogins(AspNetUserLogin aspNetUserLogin)
        {
            base.AddObject("AspNetUserLogins", aspNetUserLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AspNetUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAspNetUsers(AspNetUser aspNetUser)
        {
            base.AddObject("AspNetUsers", aspNetUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarts(Cart cart)
        {
            base.AddObject("Carts", cart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categoreis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoreis(Categorei categorei)
        {
            base.AddObject("Categoreis", categorei);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Itemeoffereds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemeoffereds(Itemeoffered itemeoffered)
        {
            base.AddObject("Itemeoffereds", itemeoffered);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderDetails(OrderDetail orderDetail)
        {
            base.AddObject("OrderDetails", orderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrders(Order order)
        {
            base.AddObject("Orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reviews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviews(Review review)
        {
            base.AddObject("Reviews", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="AspNetRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetRole object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AspNetRole CreateAspNetRole(global::System.String id, global::System.String name)
        {
            AspNetRole aspNetRole = new AspNetRole();
            aspNetRole.Id = id;
            aspNetRole.Name = name;
            return aspNetRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "AspNetUserRoles", "AspNetUsers")]
        public EntityCollection<AspNetUser> AspNetUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUser>("storemasterModel.AspNetUserRoles", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUser>("storemasterModel.AspNetUserRoles", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="AspNetUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="emailConfirmed">Initial value of the EmailConfirmed property.</param>
        /// <param name="phoneNumberConfirmed">Initial value of the PhoneNumberConfirmed property.</param>
        /// <param name="twoFactorEnabled">Initial value of the TwoFactorEnabled property.</param>
        /// <param name="lockoutEnabled">Initial value of the LockoutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static AspNetUser CreateAspNetUser(global::System.String id, global::System.Boolean emailConfirmed, global::System.Boolean phoneNumberConfirmed, global::System.Boolean twoFactorEnabled, global::System.Boolean lockoutEnabled, global::System.Int32 accessFailedCount, global::System.String userName)
        {
            AspNetUser aspNetUser = new AspNetUser();
            aspNetUser.Id = id;
            aspNetUser.EmailConfirmed = emailConfirmed;
            aspNetUser.PhoneNumberConfirmed = phoneNumberConfirmed;
            aspNetUser.TwoFactorEnabled = twoFactorEnabled;
            aspNetUser.LockoutEnabled = lockoutEnabled;
            aspNetUser.AccessFailedCount = accessFailedCount;
            aspNetUser.UserName = userName;
            return aspNetUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EmailConfirmed
        {
            get
            {
                return _EmailConfirmed;
            }
            set
            {
                OnEmailConfirmedChanging(value);
                ReportPropertyChanging("EmailConfirmed");
                _EmailConfirmed = StructuralObject.SetValidValue(value, "EmailConfirmed");
                ReportPropertyChanged("EmailConfirmed");
                OnEmailConfirmedChanged();
            }
        }
        private global::System.Boolean _EmailConfirmed;
        partial void OnEmailConfirmedChanging(global::System.Boolean value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, true, "PasswordHash");
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, true, "SecurityStamp");
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhoneNumberConfirmed
        {
            get
            {
                return _PhoneNumberConfirmed;
            }
            set
            {
                OnPhoneNumberConfirmedChanging(value);
                ReportPropertyChanging("PhoneNumberConfirmed");
                _PhoneNumberConfirmed = StructuralObject.SetValidValue(value, "PhoneNumberConfirmed");
                ReportPropertyChanged("PhoneNumberConfirmed");
                OnPhoneNumberConfirmedChanged();
            }
        }
        private global::System.Boolean _PhoneNumberConfirmed;
        partial void OnPhoneNumberConfirmedChanging(global::System.Boolean value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TwoFactorEnabled
        {
            get
            {
                return _TwoFactorEnabled;
            }
            set
            {
                OnTwoFactorEnabledChanging(value);
                ReportPropertyChanging("TwoFactorEnabled");
                _TwoFactorEnabled = StructuralObject.SetValidValue(value, "TwoFactorEnabled");
                ReportPropertyChanged("TwoFactorEnabled");
                OnTwoFactorEnabledChanged();
            }
        }
        private global::System.Boolean _TwoFactorEnabled;
        partial void OnTwoFactorEnabledChanging(global::System.Boolean value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockoutEndDateUtc
        {
            get
            {
                return _LockoutEndDateUtc;
            }
            set
            {
                OnLockoutEndDateUtcChanging(value);
                ReportPropertyChanging("LockoutEndDateUtc");
                _LockoutEndDateUtc = StructuralObject.SetValidValue(value, "LockoutEndDateUtc");
                ReportPropertyChanged("LockoutEndDateUtc");
                OnLockoutEndDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockoutEndDateUtc;
        partial void OnLockoutEndDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnLockoutEndDateUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockoutEnabled
        {
            get
            {
                return _LockoutEnabled;
            }
            set
            {
                OnLockoutEnabledChanging(value);
                ReportPropertyChanging("LockoutEnabled");
                _LockoutEnabled = StructuralObject.SetValidValue(value, "LockoutEnabled");
                ReportPropertyChanged("LockoutEnabled");
                OnLockoutEnabledChanged();
            }
        }
        private global::System.Boolean _LockoutEnabled;
        partial void OnLockoutEnabledChanging(global::System.Boolean value);
        partial void OnLockoutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value, "AccessFailedCount");
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims")]
        public EntityCollection<AspNetUserClaim> AspNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserClaim>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserClaim>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins")]
        public EntityCollection<AspNetUserLogin> AspNetUserLogins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUserLogin>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUserLogin>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUserLogins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Carts_AspNetUsers", "Carts")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("storemasterModel.FK_Carts_AspNetUsers", "Carts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("storemasterModel.FK_Carts_AspNetUsers", "Carts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_OrderDetails", "OrderDetails")]
        public EntityCollection<OrderDetail> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_OrderDetails", "OrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_OrderDetails", "OrderDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Orders_AspNetUsers", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("storemasterModel.FK_Orders_AspNetUsers", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("storemasterModel.FK_Orders_AspNetUsers", "Orders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Reviews_AspNetUsers", "Reviews")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("storemasterModel.FK_Reviews_AspNetUsers", "Reviews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("storemasterModel.FK_Reviews_AspNetUsers", "Reviews", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "AspNetUserRoles", "AspNetRoles")]
        public EntityCollection<AspNetRole> AspNetRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetRole>("storemasterModel.AspNetUserRoles", "AspNetRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetRole>("storemasterModel.AspNetUserRoles", "AspNetRoles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="AspNetUserClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserClaim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserClaim object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserClaim CreateAspNetUserClaim(global::System.Int32 id, global::System.String userId)
        {
            AspNetUserClaim aspNetUserClaim = new AspNetUserClaim();
            aspNetUserClaim.Id = id;
            aspNetUserClaim.UserId = userId;
            return aspNetUserClaim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimType
        {
            get
            {
                return _ClaimType;
            }
            set
            {
                OnClaimTypeChanging(value);
                ReportPropertyChanging("ClaimType");
                _ClaimType = StructuralObject.SetValidValue(value, true, "ClaimType");
                ReportPropertyChanged("ClaimType");
                OnClaimTypeChanged();
            }
        }
        private global::System.String _ClaimType;
        partial void OnClaimTypeChanging(global::System.String value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimValue
        {
            get
            {
                return _ClaimValue;
            }
            set
            {
                OnClaimValueChanging(value);
                ReportPropertyChanging("ClaimValue");
                _ClaimValue = StructuralObject.SetValidValue(value, true, "ClaimValue");
                ReportPropertyChanged("ClaimValue");
                OnClaimValueChanged();
            }
        }
        private global::System.String _ClaimValue;
        partial void OnClaimValueChanging(global::System.String value);
        partial void OnClaimValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="AspNetUserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AspNetUserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AspNetUserLogin object.
        /// </summary>
        /// <param name="loginProvider">Initial value of the LoginProvider property.</param>
        /// <param name="providerKey">Initial value of the ProviderKey property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static AspNetUserLogin CreateAspNetUserLogin(global::System.String loginProvider, global::System.String providerKey, global::System.String userId)
        {
            AspNetUserLogin aspNetUserLogin = new AspNetUserLogin();
            aspNetUserLogin.LoginProvider = loginProvider;
            aspNetUserLogin.ProviderKey = providerKey;
            aspNetUserLogin.UserId = userId;
            return aspNetUserLogin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginProvider
        {
            get
            {
                return _LoginProvider;
            }
            set
            {
                if (_LoginProvider != value)
                {
                    OnLoginProviderChanging(value);
                    ReportPropertyChanging("LoginProvider");
                    _LoginProvider = StructuralObject.SetValidValue(value, false, "LoginProvider");
                    ReportPropertyChanged("LoginProvider");
                    OnLoginProviderChanged();
                }
            }
        }
        private global::System.String _LoginProvider;
        partial void OnLoginProviderChanging(global::System.String value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProviderKey
        {
            get
            {
                return _ProviderKey;
            }
            set
            {
                if (_ProviderKey != value)
                {
                    OnProviderKeyChanging(value);
                    ReportPropertyChanging("ProviderKey");
                    _ProviderKey = StructuralObject.SetValidValue(value, false, "ProviderKey");
                    ReportPropertyChanged("ProviderKey");
                    OnProviderKeyChanged();
                }
            }
        }
        private global::System.String _ProviderKey;
        partial void OnProviderKeyChanging(global::System.String value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId", "AspNetUsers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__MigrationHistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of the MigrationId property.</param>
        /// <param name="contextKey">Initial value of the ContextKey property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false, "MigrationId");
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false, "ContextKey");
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Cart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cart object.
        /// </summary>
        /// <param name="cartId">Initial value of the CartId property.</param>
        public static Cart CreateCart(global::System.Int32 cartId)
        {
            Cart cart = new Cart();
            cart.CartId = cartId;
            return cart;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CartId
        {
            get
            {
                return _CartId;
            }
            set
            {
                if (_CartId != value)
                {
                    OnCartIdChanging(value);
                    ReportPropertyChanging("CartId");
                    _CartId = StructuralObject.SetValidValue(value, "CartId");
                    ReportPropertyChanged("CartId");
                    OnCartIdChanged();
                }
            }
        }
        private global::System.Int32 _CartId;
        partial void OnCartIdChanging(global::System.Int32 value);
        partial void OnCartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, true, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Carts_AspNetUsers", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Carts_AspNetUsers", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Carts_AspNetUsers", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Carts_AspNetUsers", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_Carts_AspNetUsers", "AspNetUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Carts_Items", "Itemeoffereds")]
        public Itemeoffered Itemeoffered
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_Carts_Items", "Itemeoffereds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_Carts_Items", "Itemeoffereds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Itemeoffered> ItemeofferedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_Carts_Items", "Itemeoffereds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Itemeoffered>("storemasterModel.FK_Carts_Items", "Itemeoffereds", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Categorei")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Categorei : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Categorei object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static Categorei CreateCategorei(global::System.Int32 categoryId)
        {
            Categorei categorei = new Categorei();
            categorei.CategoryId = categoryId;
            return categorei;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Items_Categoreis", "Items")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("storemasterModel.FK_Items_Categoreis", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("storemasterModel.FK_Items_Categoreis", "Items", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        public static City CreateCity(global::System.Int32 cityId)
        {
            City city = new City();
            city.CityId = cityId;
            return city;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value, "CityId");
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Orders_Cities", "Orders")]
        public EntityCollection<Order> Orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Order>("storemasterModel.FK_Orders_Cities", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Order>("storemasterModel.FK_Orders_Cities", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        public static Item CreateItem(global::System.Int32 item_Id)
        {
            Item item = new Item();
            item.Item_Id = item_Id;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value, "Item_Id");
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item_Name
        {
            get
            {
                return _Item_Name;
            }
            set
            {
                OnItem_NameChanging(value);
                ReportPropertyChanging("Item_Name");
                _Item_Name = StructuralObject.SetValidValue(value, true, "Item_Name");
                ReportPropertyChanged("Item_Name");
                OnItem_NameChanged();
            }
        }
        private global::System.String _Item_Name;
        partial void OnItem_NameChanging(global::System.String value);
        partial void OnItem_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Item_Description
        {
            get
            {
                return _Item_Description;
            }
            set
            {
                OnItem_DescriptionChanging(value);
                ReportPropertyChanging("Item_Description");
                _Item_Description = StructuralObject.SetValidValue(value, true, "Item_Description");
                ReportPropertyChanged("Item_Description");
                OnItem_DescriptionChanged();
            }
        }
        private global::System.String _Item_Description;
        partial void OnItem_DescriptionChanging(global::System.String value);
        partial void OnItem_DescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ItemPrice
        {
            get
            {
                return _ItemPrice;
            }
            set
            {
                OnItemPriceChanging(value);
                ReportPropertyChanging("ItemPrice");
                _ItemPrice = StructuralObject.SetValidValue(value, "ItemPrice");
                ReportPropertyChanged("ItemPrice");
                OnItemPriceChanged();
            }
        }
        private Nullable<global::System.Double> _ItemPrice;
        partial void OnItemPriceChanging(Nullable<global::System.Double> value);
        partial void OnItemPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value, "CategoryId");
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image1
        {
            get
            {
                return _Image1;
            }
            set
            {
                OnImage1Changing(value);
                ReportPropertyChanging("Image1");
                _Image1 = StructuralObject.SetValidValue(value, true, "Image1");
                ReportPropertyChanged("Image1");
                OnImage1Changed();
            }
        }
        private global::System.String _Image1;
        partial void OnImage1Changing(global::System.String value);
        partial void OnImage1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image2
        {
            get
            {
                return _Image2;
            }
            set
            {
                OnImage2Changing(value);
                ReportPropertyChanging("Image2");
                _Image2 = StructuralObject.SetValidValue(value, true, "Image2");
                ReportPropertyChanged("Image2");
                OnImage2Changed();
            }
        }
        private global::System.String _Image2;
        partial void OnImage2Changing(global::System.String value);
        partial void OnImage2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image3
        {
            get
            {
                return _Image3;
            }
            set
            {
                OnImage3Changing(value);
                ReportPropertyChanging("Image3");
                _Image3 = StructuralObject.SetValidValue(value, true, "Image3");
                ReportPropertyChanged("Image3");
                OnImage3Changed();
            }
        }
        private global::System.String _Image3;
        partial void OnImage3Changing(global::System.String value);
        partial void OnImage3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image4
        {
            get
            {
                return _Image4;
            }
            set
            {
                OnImage4Changing(value);
                ReportPropertyChanging("Image4");
                _Image4 = StructuralObject.SetValidValue(value, true, "Image4");
                ReportPropertyChanged("Image4");
                OnImage4Changed();
            }
        }
        private global::System.String _Image4;
        partial void OnImage4Changing(global::System.String value);
        partial void OnImage4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Image5
        {
            get
            {
                return _Image5;
            }
            set
            {
                OnImage5Changing(value);
                ReportPropertyChanging("Image5");
                _Image5 = StructuralObject.SetValidValue(value, true, "Image5");
                ReportPropertyChanged("Image5");
                OnImage5Changed();
            }
        }
        private global::System.String _Image5;
        partial void OnImage5Changing(global::System.String value);
        partial void OnImage5Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Items_Categoreis", "Categoreis")]
        public Categorei Categorei
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorei>("storemasterModel.FK_Items_Categoreis", "Categoreis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorei>("storemasterModel.FK_Items_Categoreis", "Categoreis").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Categorei> CategoreiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Categorei>("storemasterModel.FK_Items_Categoreis", "Categoreis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Categorei>("storemasterModel.FK_Items_Categoreis", "Categoreis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Itemeoffereds_Items", "Itemeoffereds")]
        public EntityCollection<Itemeoffered> Itemeoffereds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Itemeoffered>("storemasterModel.FK_Itemeoffereds_Items", "Itemeoffereds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Itemeoffered>("storemasterModel.FK_Itemeoffereds_Items", "Itemeoffereds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Reviews_Items", "Reviews")]
        public EntityCollection<Review> Reviews
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("storemasterModel.FK_Reviews_Items", "Reviews");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("storemasterModel.FK_Reviews_Items", "Reviews", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Itemeoffered")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Itemeoffered : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Itemeoffered object.
        /// </summary>
        /// <param name="colorId">Initial value of the ColorId property.</param>
        public static Itemeoffered CreateItemeoffered(global::System.Int32 colorId)
        {
            Itemeoffered itemeoffered = new Itemeoffered();
            itemeoffered.ColorId = colorId;
            return itemeoffered;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorId
        {
            get
            {
                return _ColorId;
            }
            set
            {
                if (_ColorId != value)
                {
                    OnColorIdChanging(value);
                    ReportPropertyChanging("ColorId");
                    _ColorId = StructuralObject.SetValidValue(value, "ColorId");
                    ReportPropertyChanged("ColorId");
                    OnColorIdChanged();
                }
            }
        }
        private global::System.Int32 _ColorId;
        partial void OnColorIdChanging(global::System.Int32 value);
        partial void OnColorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColorName
        {
            get
            {
                return _ColorName;
            }
            set
            {
                OnColorNameChanging(value);
                ReportPropertyChanging("ColorName");
                _ColorName = StructuralObject.SetValidValue(value, true, "ColorName");
                ReportPropertyChanged("ColorName");
                OnColorNameChanged();
            }
        }
        private global::System.String _ColorName;
        partial void OnColorNameChanging(global::System.String value);
        partial void OnColorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true, "Size");
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuantityLeft
        {
            get
            {
                return _QuantityLeft;
            }
            set
            {
                OnQuantityLeftChanging(value);
                ReportPropertyChanging("QuantityLeft");
                _QuantityLeft = StructuralObject.SetValidValue(value, "QuantityLeft");
                ReportPropertyChanged("QuantityLeft");
                OnQuantityLeftChanged();
            }
        }
        private Nullable<global::System.Int32> _QuantityLeft;
        partial void OnQuantityLeftChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityLeftChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Carts_Items", "Carts")]
        public EntityCollection<Cart> Carts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cart>("storemasterModel.FK_Carts_Items", "Carts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cart>("storemasterModel.FK_Carts_Items", "Carts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Itemeoffereds_Items", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Itemeoffereds_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Itemeoffereds_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Itemeoffereds_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("storemasterModel.FK_Itemeoffereds_Items", "Items", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_Items", "OrderDetails")]
        public EntityCollection<OrderDetail> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_Items", "OrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_Items", "OrderDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="adress">Initial value of the Adress property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="orderDate">Initial value of the OrderDate property.</param>
        public static Order CreateOrder(global::System.Int32 orderId, global::System.String firstName, global::System.String lastName, global::System.Int32 city, global::System.String adress, global::System.String userId, global::System.String email, global::System.String phoneNumber, global::System.String paymentMethod, global::System.DateTime orderDate)
        {
            Order order = new Order();
            order.OrderId = orderId;
            order.FirstName = firstName;
            order.LastName = lastName;
            order.City = city;
            order.Adress = adress;
            order.UserId = userId;
            order.Email = email;
            order.PhoneNumber = phoneNumber;
            order.PaymentMethod = paymentMethod;
            order.OrderDate = orderDate;
            return order;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                if (_OrderId != value)
                {
                    OnOrderIdChanging(value);
                    ReportPropertyChanging("OrderId");
                    _OrderId = StructuralObject.SetValidValue(value, "OrderId");
                    ReportPropertyChanged("OrderId");
                    OnOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.Int32 _City;
        partial void OnCityChanging(global::System.Int32 value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Adress
        {
            get
            {
                return _Adress;
            }
            set
            {
                OnAdressChanging(value);
                ReportPropertyChanging("Adress");
                _Adress = StructuralObject.SetValidValue(value, false, "Adress");
                ReportPropertyChanged("Adress");
                OnAdressChanged();
            }
        }
        private global::System.String _Adress;
        partial void OnAdressChanging(global::System.String value);
        partial void OnAdressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, false, "PaymentMethod");
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value, "OrderDate");
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Orders_AspNetUsers", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Orders_AspNetUsers", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Orders_AspNetUsers", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Orders_AspNetUsers", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_Orders_AspNetUsers", "AspNetUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Orders_Cities", "Cities")]
        public City City1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("storemasterModel.FK_Orders_Cities", "Cities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("storemasterModel.FK_Orders_Cities", "Cities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> City1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("storemasterModel.FK_Orders_Cities", "Cities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("storemasterModel.FK_Orders_Cities", "Cities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_Orders", "OrderDetails")]
        public EntityCollection<OrderDetail> OrderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_Orders", "OrderDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderDetail>("storemasterModel.FK_OrderDetails_Orders", "OrderDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="OrderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderDetail object.
        /// </summary>
        /// <param name="orderDetaileId">Initial value of the OrderDetaileId property.</param>
        /// <param name="orderId">Initial value of the OrderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static OrderDetail CreateOrderDetail(global::System.Int32 orderDetaileId, global::System.Int32 orderId, global::System.String userId, global::System.Int32 itemId, global::System.Int32 quantity)
        {
            OrderDetail orderDetail = new OrderDetail();
            orderDetail.OrderDetaileId = orderDetaileId;
            orderDetail.OrderId = orderId;
            orderDetail.UserId = userId;
            orderDetail.ItemId = itemId;
            orderDetail.Quantity = quantity;
            return orderDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderDetaileId
        {
            get
            {
                return _OrderDetaileId;
            }
            set
            {
                if (_OrderDetaileId != value)
                {
                    OnOrderDetaileIdChanging(value);
                    ReportPropertyChanging("OrderDetaileId");
                    _OrderDetaileId = StructuralObject.SetValidValue(value, "OrderDetaileId");
                    ReportPropertyChanged("OrderDetaileId");
                    OnOrderDetaileIdChanged();
                }
            }
        }
        private global::System.Int32 _OrderDetaileId;
        partial void OnOrderDetaileIdChanging(global::System.Int32 value);
        partial void OnOrderDetaileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderId
        {
            get
            {
                return _OrderId;
            }
            set
            {
                OnOrderIdChanging(value);
                ReportPropertyChanging("OrderId");
                _OrderId = StructuralObject.SetValidValue(value, "OrderId");
                ReportPropertyChanged("OrderId");
                OnOrderIdChanged();
            }
        }
        private global::System.Int32 _OrderId;
        partial void OnOrderIdChanging(global::System.Int32 value);
        partial void OnOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_OrderDetails", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_OrderDetails_OrderDetails", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_OrderDetails_OrderDetails", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_OrderDetails_OrderDetails", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_OrderDetails_OrderDetails", "AspNetUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_Items", "Itemeoffereds")]
        public Itemeoffered Itemeoffered
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_OrderDetails_Items", "Itemeoffereds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_OrderDetails_Items", "Itemeoffereds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Itemeoffered> ItemeofferedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Itemeoffered>("storemasterModel.FK_OrderDetails_Items", "Itemeoffereds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Itemeoffered>("storemasterModel.FK_OrderDetails_Items", "Itemeoffereds", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_OrderDetails_Orders", "Orders")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("storemasterModel.FK_OrderDetails_Orders", "Orders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("storemasterModel.FK_OrderDetails_Orders", "Orders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("storemasterModel.FK_OrderDetails_Orders", "Orders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("storemasterModel.FK_OrderDetails_Orders", "Orders", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="reviewId">Initial value of the ReviewId property.</param>
        public static Review CreateReview(global::System.Int32 reviewId)
        {
            Review review = new Review();
            review.ReviewId = reviewId;
            return review;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewId
        {
            get
            {
                return _ReviewId;
            }
            set
            {
                if (_ReviewId != value)
                {
                    OnReviewIdChanging(value);
                    ReportPropertyChanging("ReviewId");
                    _ReviewId = StructuralObject.SetValidValue(value, "ReviewId");
                    ReportPropertyChanged("ReviewId");
                    OnReviewIdChanged();
                }
            }
        }
        private global::System.Int32 _ReviewId;
        partial void OnReviewIdChanging(global::System.Int32 value);
        partial void OnReviewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, true, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemId;
        partial void OnItemIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Reviews_AspNetUsers", "AspNetUsers")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Reviews_AspNetUsers", "AspNetUsers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Reviews_AspNetUsers", "AspNetUsers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("storemasterModel.FK_Reviews_AspNetUsers", "AspNetUsers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("storemasterModel.FK_Reviews_AspNetUsers", "AspNetUsers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("storemasterModel", "FK_Reviews_Items", "Items")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Reviews_Items", "Items").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Reviews_Items", "Items").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("storemasterModel.FK_Reviews_Items", "Items");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("storemasterModel.FK_Reviews_Items", "Items", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="storemasterModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }

    #endregion

}
